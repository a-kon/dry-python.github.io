doctype
html
  head
    meta(charset="utf-8")
    meta(name="description" content="Domain Driven Design Toolkit")
    meta(name="author" content="Artem Malyshev")
    meta(name="apple-mobile-web-app-capable" content="yes")
    meta(name="apple-mobile-web-app-status-bar-style" content="black-translucent")
    meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    title Domain Driven Design Toolkit
  body
    .reveal
      .slides
        section
          h2 Domain Driven Design Toolkit
          h4
            a(href="https://github.com/proofit404") Artem Malyshev
        section
          h2 BIO
          ul
            li 5 years of experience in Python
            li Django Channels 1.0
            li Dry Python
        section
          h2 Complexity
          p.fragment #[b Accidental complexity] refers to challenges that developers unintentionally make for themselves as a result of trying to solve a problem.
          p.fragment #[b Essential complexity] is just the nature of the beast you're trying to tame.
        section
          h2 What is the domain-driven design?
          p.fragment Focus on the core complexity and opportunity in the domain
          p.fragment Explore models in a collaboration of domain experts and software experts
          p.fragment Write software that expresses those models explicitly
          p.fragment Speak #[b ubiquitous language] within a #[b bounded context]
        section
          h2 Not about technology
          p You have to master the tool first, than you can focus on #[b DDD].
        section
          h2 What is a model?
          p.fragment #[b HINT:] Not a UML diagram
        section
          h2 dataclasses
          pre
            code.python.
              from dataclasses import dataclass
              from datetime import datetime
              from decimal import Decimal
              from typing import NewType

              PriceId = NewType("PriceId", int)
              CategoryId = NewType("CategoryId", int)

              @dataclass
              class Price:
                  primary_key: PriceId
                  category: CategoryId
                  cost: Decimal
                  active_from_date: datetime
